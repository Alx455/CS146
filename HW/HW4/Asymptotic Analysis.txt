Analysys for Insertion sort:
Asuming N is the number of elements in the array to be sorted.
Best case: 
           The elements are already sorted thus the time complexity will
           be O(n) as it will only iterate through the outer while loop,
           the inner while loop condition will never evaluate to true, so
           the inner loop will never run.
Average case:
           The elements are unsorted. The time complexity of thise case would
           be O(n^2) as the outer while loop will iterate N times. The inner
           loop will run varying amount of times, but ultimately the algorithm
           is closer to running the inner loop an N amount of times than 
           less.
Worst case:
           The elements are sorted in the opposite order in which inserrtion
           sort is designed to sort them(in most cases, insertion sort orders
           elements in ascending order, so the worst case would be elements
           sorted in ascending order, or vice versa). The time comlexity would
           be O(n^2) as the outer while loop would run N times, and the inner
           loop would run more iterations as the sorted left subarray grows.
           The amount of times the inner loop would run approaches N times.


Analysis for Matrix Multiplication:
Assuming N is the number of rows in A(also equal to number of columns in B) 
and M is the number of columns in A
Best case: 
           The best case is if both matrices A and B are of dimmensions 1x1.
           This means that the for loops all run only once, and the algorithm
           essentially becomes a multiplication operation, running at time
           complexity of O(1).
Average case:
           The average case is having square matricies A and B of dimensions
           4x4 for example. In this case, N = M and all for loops run for the
           same number of iterations N. Because the first loop nests to other
           two, the algorithm iterates exponentially. This means the time
           complexity of this case is O(n^3).

Worst case:
           The worst case is having large rectangular matricies A and B of
           dimensions 10x12 for example. In this case, N < M and the first two
           loops run for N times, while the innermost loop runs for M
           times. While this case techincally does run a little longer than
           the average case, its time complexity still turns out to be
           O(n^3).
