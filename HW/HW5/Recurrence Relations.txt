Problem 1:
1. T(N) = 2T(N-1) + 1
   T(N-1) = 2T(N-2) + 1
   T(N-2) = 2T(N-3) + 1

   T(N) = 2(2T(N-2) + 1) + 1
        = 4T(N-2) + 3
   T(N) = 4(2T(N-3) + 1) + 3
        = 8T(N-3) + 7
   T(N) = 8(2T(N-4) + 1) + 7
        = 16T(N-4) + 15
   Assume N = k
   T(N) = 2^(k)T(N-k) + (2^(k) - 1)
        = 2^(N) + (2^(N) - 1)
   Order of growth: f(n) = 2^(n) + (2^(n) - 1)
  Time complexity: O(2^n)

2. T(N) = 3T(N-1) + N
   T(N-1) = 3T(N-2) + N-1
   T(N-2) = 3T(N-3) + N-2

   T(N) = 3(3T(N-2) + N-1) + N
        = 9T(N-2) + 4N - 3
   T(N) = 9(3T(N-3) + N-2) + 4N - 3
        = 27T(N-3) + 13N - 21
   T(N) = 27(3T(N-4) + N-3) + 13N - 21
        = 81T(N-4) + 40N - 102
   Assume N = k
   T(N) = 3^(k)T(N-k) + 40k - c
        = 3^N + 40N - c
   Order of growth: f(n) = 3^(n) + 40n - c
   Time complexity: O(3^n)



Problem 2:

